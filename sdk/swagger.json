{
  "openapi": "3.0.1",
  "info": {
    "title": "Eventuras API 3",
    "version": "3"
  },
  "paths": {
    "/v3/certificates/{id}": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CertificateFormat"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/event/{id}/certificates": {
      "get": {
        "tags": [
          "EventCertificates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/event/{id}/certificates/preview": {
      "get": {
        "tags": [
          "EventCertificates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/event/{id}/certificates/issue": {
      "post": {
        "tags": [
          "EventCertificates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "send",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/event/{id}/certificates/update": {
      "post": {
        "tags": [
          "EventCertificates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/collections": {
      "get": {
        "tags": [
          "EventCollection"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "EventCollection"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/collections/{id}": {
      "get": {
        "tags": [
          "EventCollection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "EventCollection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventCollectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventCollection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/{eventId}/collections/{collectionId}": {
      "put": {
        "tags": [
          "EventCollectionMapping"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventCollectionMapping"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/{eventId}/products": {
      "get": {
        "tags": [
          "EventProducts"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Visibility",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ProductVisibility"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventProducts"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/{eventId}/products/{productId}": {
      "put": {
        "tags": [
          "EventProducts"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "EventProducts"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/{eventId}/products/{productId}/variants": {
      "get": {
        "tags": [
          "EventProductVariants"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventProductVariants"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductVariantDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductVariantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductVariantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductVariantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events/{eventId}/products/{productId}/variants/{id}": {
      "delete": {
        "tags": [
          "EventProductVariants"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieves a list of events based on the given query.",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EventInfoType"
            }
          },
          {
            "name": "Start",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LocalDate"
            }
          },
          {
            "name": "End",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/LocalDate"
            }
          },
          {
            "name": "Period",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PeriodMatchingKind"
            }
          },
          {
            "name": "IncludePastEvents",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDraftEvents",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDtoPageResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Creates a new event.",
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Event information.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Retrieves event details by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Updates an existing event by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Updated event information.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Events"
        ],
        "summary": "Partially updates a specific event by its ID using JSON Patch.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON Patch document with updates.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDtoJsonPatchDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EventFormDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Deletes an event by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the event to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/notifications/{id}/recipients": {
      "get": {
        "tags": [
          "NotificationRecipients"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SentOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ErrorsOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationRecipientListOrder"
            }
          },
          {
            "name": "Desc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeStatistics",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "parameters": [
          {
            "name": "EventId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationStatus"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationType"
            }
          },
          {
            "name": "RecipientUserId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationListOrder"
            }
          },
          {
            "name": "Desc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeStatistics",
            "in": "query",
            "description": "Whether to include delivery statistics into response.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/notifications/email": {
      "post": {
        "tags": [
          "NotificationsQueueing"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/notifications/sms": {
      "post": {
        "tags": [
          "NotificationsQueueing"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsNotificationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsNotificationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsNotificationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/onlinecourses": {
      "get": {
        "tags": [
          "OnlineCourse"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OnlineCourseDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OnlineCourseDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OnlineCourseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/onlinecourses/{id}": {
      "get": {
        "tags": [
          "OnlineCourse"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineCourseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineCourseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineCourseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeUser",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeRegistration",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EventId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegistrationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          },
          {
            "name": "IncludeUser",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeRegistration",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrderRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrderRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrderRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/organizations/{organizationId}/members/{userId}/roles": {
      "get": {
        "tags": [
          "OrganizationMemberRoles"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationMemberRoles"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationMemberRoles"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v3/organizations/{organizationId}/members/{userId}": {
      "put": {
        "tags": [
          "OrganizationMembers"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationMembers"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/organizations/{organizationId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/organizations/{organizationId}/settings": {
      "get": {
        "tags": [
          "OrganizationSettings"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationSettingDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrganizationSettings"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSettingValueDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSettingValueDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSettingValueDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationSettingValueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationSettings"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationSettingValueDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationSettingValueDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationSettingValueDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "minItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrganizationSettingValueDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/registrations/{id}/certificate/send": {
      "post": {
        "tags": [
          "RegistrationCertificate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/registrations/{id}/orders": {
      "get": {
        "tags": [
          "RegistrationOrders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RegistrationOrders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationOrderDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/registrations/{id}/products": {
      "post": {
        "tags": [
          "RegistrationOrders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/registrations": {
      "get": {
        "tags": [
          "Registrations"
        ],
        "parameters": [
          {
            "name": "EventId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeEventInfo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeUserInfo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeProducts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeOrders",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Registrations"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegistrationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/registrations/{id}": {
      "get": {
        "tags": [
          "Registrations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EventId",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeEventInfo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeUserInfo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeProducts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeOrders",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Registrations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Registrations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/registrations/me/{eventId}": {
      "post": {
        "tags": [
          "Registrations"
        ],
        "summary": "Alias for POST /v3/registrations",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "createOrder",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/v3/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets information about the current user. Creates a new user if no user with the email exists.",
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFormDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFormDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFormDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserFormDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/v3/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/UserListOrder"
            }
          },
          {
            "name": "Descending",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "maximum": 250,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "Eventuras-Org-Id",
            "in": "header",
            "description": "Optional organization Id. Will be required in API version 4.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CalendarSystem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "minYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "maxYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "eras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Era"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CertificateFormat": {
        "enum": [
          "Json",
          "Html",
          "Pdf"
        ],
        "type": "string"
      },
      "EmailNotificationDto": {
        "required": [
          "bodyMarkdown",
          "subject"
        ],
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "eventParticipants": {
            "$ref": "#/components/schemas/EventParticipantsFilterDto"
          },
          "subject": {
            "minLength": 3,
            "type": "string"
          },
          "bodyMarkdown": {
            "minLength": 10,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Era": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventCollectionDto": {
        "required": [
          "name",
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "featured": {
            "type": "boolean"
          },
          "featuredImageUrl": {
            "type": "string",
            "nullable": true
          },
          "featuredImageCaption": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/EventInfoType"
          },
          "status": {
            "$ref": "#/components/schemas/EventInfoStatus"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "featured": {
            "type": "boolean"
          },
          "program": {
            "type": "string",
            "nullable": true
          },
          "practicalInformation": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "onDemand": {
            "type": "boolean"
          },
          "dateStart": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "dateEnd": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "lastRegistrationDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "featuredImageUrl": {
            "type": "string",
            "nullable": true
          },
          "featuredImageCaption": {
            "type": "string",
            "nullable": true
          },
          "headline": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "moreInformation": {
            "type": "string",
            "nullable": true
          },
          "welcomeLetter": {
            "type": "string",
            "nullable": true
          },
          "informationRequest": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDtoPageResponseDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventFormDto": {
        "required": [
          "slug",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventInfoType"
          },
          "status": {
            "$ref": "#/components/schemas/EventInfoStatus"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "headline": {
            "type": "string",
            "nullable": true
          },
          "moreInformation": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "manageRegistrations": {
            "type": "boolean"
          },
          "onDemand": {
            "type": "boolean"
          },
          "featured": {
            "type": "boolean"
          },
          "program": {
            "type": "string",
            "nullable": true
          },
          "practicalInformation": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "endDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "welcomeLetter": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "externalInfoPageUrl": {
            "type": "string",
            "nullable": true
          },
          "externalRegistrationsUrl": {
            "type": "string",
            "nullable": true
          },
          "informationRequest": {
            "type": "string",
            "nullable": true
          },
          "lastRegistrationDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "lastCancellationDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "certificateTitle": {
            "type": "string",
            "nullable": true
          },
          "certificateDescription": {
            "type": "string",
            "nullable": true
          },
          "featuredImageUrl": {
            "type": "string",
            "nullable": true
          },
          "featuredImageCaption": {
            "type": "string",
            "nullable": true
          },
          "projectCode": {
            "type": "string",
            "nullable": true
          },
          "organizerUserId": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/EventInfoOptionsDto"
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object (DTO) for Event Information.\r\nUsed for API between the backend and the frontend."
      },
      "EventFormDtoJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventFormDtoOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "EventFormDtoOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventInfoOptionsDto": {
        "type": "object",
        "properties": {
          "registrationPolicy": {
            "$ref": "#/components/schemas/EventInfoRegistrationPolicyDto"
          }
        },
        "additionalProperties": false
      },
      "EventInfoRegistrationPolicyDto": {
        "type": "object",
        "properties": {
          "allowedRegistrationEditHours": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowModificationsAfterCancellationDue": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EventInfoStatus": {
        "enum": [
          "Draft",
          "Planned",
          "RegistrationsOpen",
          "WaitingList",
          "RegistrationsClosed",
          "Finished",
          "Archived",
          "Cancelled"
        ],
        "type": "string"
      },
      "EventInfoType": {
        "enum": [
          "Course",
          "Conference",
          "OnlineCourse",
          "Social",
          "Other"
        ],
        "type": "string"
      },
      "EventParticipantsFilterDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registrationStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistrationStatus"
            },
            "nullable": true
          },
          "registrationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistrationType"
            },
            "nullable": true
          },
          "isDefined": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IContractResolver": {
        "type": "object",
        "additionalProperties": false
      },
      "Instant": {
        "type": "object",
        "additionalProperties": false
      },
      "IsoDayOfWeek": {
        "enum": [
          "None",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday"
        ],
        "type": "string"
      },
      "LocalDate": {
        "type": "object",
        "properties": {
          "calendar": {
            "$ref": "#/components/schemas/CalendarSystem"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/IsoDayOfWeek"
          },
          "yearOfEra": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "era": {
            "$ref": "#/components/schemas/Era"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NewOrderRequestDto": {
        "required": [
          "lines",
          "registrationId"
        ],
        "type": "object",
        "properties": {
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineModel"
            }
          },
          "registrationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NewProductDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "more": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "vatPercent": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          }
        },
        "additionalProperties": false
      },
      "NewProductVariantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "vatPercent": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NewRegistrationDto": {
        "required": [
          "eventId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RegistrationCustomerInfoDto"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RegistrationType"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "empty": {
            "type": "boolean",
            "readOnly": true
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "eventId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "createOrder": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NewRegistrationOrderDto": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineModel"
            }
          }
        },
        "additionalProperties": false
      },
      "NewUserDto": {
        "required": [
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "eventId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "$ref": "#/components/schemas/Instant"
          },
          "statusUpdated": {
            "$ref": "#/components/schemas/Instant"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "status": {
            "$ref": "#/components/schemas/NotificationStatus"
          },
          "statistics": {
            "$ref": "#/components/schemas/NotificationStatisticsDto"
          }
        },
        "additionalProperties": false
      },
      "NotificationListOrder": {
        "enum": [
          "Created",
          "StatusUpdated"
        ],
        "type": "string"
      },
      "NotificationRecipientListOrder": {
        "enum": [
          "Created",
          "Sent",
          "Name",
          "Identifier"
        ],
        "type": "string"
      },
      "NotificationStatisticsDto": {
        "type": "object",
        "properties": {
          "sent": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "errors": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "recipients": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NotificationStatus": {
        "enum": [
          "New",
          "Queued",
          "Started",
          "Cancelled",
          "Failed",
          "Sent"
        ],
        "type": "string"
      },
      "NotificationType": {
        "enum": [
          "Email",
          "Sms"
        ],
        "type": "string"
      },
      "OnlineCourseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "featured": {
            "type": "boolean"
          },
          "onDemand": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "type": "string"
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineDto"
            },
            "nullable": true
          },
          "registration": {
            "$ref": "#/components/schemas/OrderRegistrationDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "additionalProperties": false
      },
      "OrderLineDto": {
        "type": "object",
        "properties": {
          "orderLineId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productVariant": {
            "$ref": "#/components/schemas/ProductVariantDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderLineModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productVariantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderRegistrationDto": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RegistrationStatus"
          },
          "type": {
            "$ref": "#/components/schemas/RegistrationType"
          },
          "certificateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          "Draft",
          "Verified",
          "Invoiced",
          "Cancelled",
          "Refunded"
        ],
        "type": "string"
      },
      "OrderUpdateRequestDto": {
        "required": [
          "lines"
        ],
        "type": "object",
        "properties": {
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderLineModel"
            }
          }
        },
        "additionalProperties": false
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "url": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "logoBase64": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationFormDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "logoBase64": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationSettingDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "section": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/OrganizationSettingType"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationSettingType": {
        "enum": [
          "String",
          "Number",
          "Url",
          "Email",
          "Boolean"
        ],
        "type": "string"
      },
      "OrganizationSettingValueDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentProvider": {
        "enum": [
          "EmailInvoice",
          "PowerOfficeEmailInvoice",
          "PowerOfficeEHFInvoice",
          "StripeInvoice",
          "StripeDirect",
          "VippsInvoice",
          "VippsDirect"
        ],
        "type": "string"
      },
      "PeriodMatchingKind": {
        "enum": [
          "Match",
          "Intersect",
          "Contain"
        ],
        "type": "string"
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "more": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "vatPercent": {
            "type": "integer",
            "format": "int32"
          },
          "visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantDto"
            },
            "nullable": true
          },
          "minimumQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean",
            "readOnly": true
          },
          "enableQuantity": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductFormDto": {
        "type": "object",
        "properties": {
          "published": {
            "type": "boolean",
            "nullable": true
          },
          "visibility": {
            "$ref": "#/components/schemas/ProductVisibility"
          }
        },
        "additionalProperties": false
      },
      "ProductOrderDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productVariantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productVariant": {
            "$ref": "#/components/schemas/ProductVariantDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductVariantDto": {
        "type": "object",
        "properties": {
          "productVariantId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "vatPercent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductVisibility": {
        "enum": [
          "Event",
          "Collection"
        ],
        "type": "string"
      },
      "RegistrationCustomerInfoDto": {
        "type": "object",
        "properties": {
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "invoiceReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationDto": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RegistrationStatus"
          },
          "type": {
            "$ref": "#/components/schemas/RegistrationType"
          },
          "certificateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "event": {
            "$ref": "#/components/schemas/EventDto"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOrderDto"
            },
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationFormDto": {
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RegistrationCustomerInfoDto"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RegistrationType"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentProvider"
          },
          "empty": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationStatus": {
        "enum": [
          "Draft",
          "Cancelled",
          "Verified",
          "NotAttended",
          "Attended",
          "Finished",
          "WaitingList"
        ],
        "type": "string"
      },
      "RegistrationType": {
        "enum": [
          "Participant",
          "Student",
          "Staff",
          "Lecturer",
          "Artist"
        ],
        "type": "string"
      },
      "RoleRequestDto": {
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SmsNotificationDto": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "eventParticipants": {
            "$ref": "#/components/schemas/EventParticipantsFilterDto"
          },
          "message": {
            "minLength": 10,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFormDto": {
        "required": [
          "email",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserListOrder": {
        "enum": [
          "Name",
          "Email",
          "Phone"
        ],
        "type": "string"
      }
    }
  }
}