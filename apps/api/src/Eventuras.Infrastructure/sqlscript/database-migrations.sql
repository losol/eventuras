CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetRoles" (
        "Id" text NOT NULL,
        "Name" character varying(256),
        "NormalizedName" character varying(256),
        "ConcurrencyStamp" text,
        CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetUsers" (
        "Id" text NOT NULL,
        "UserName" character varying(256),
        "NormalizedUserName" character varying(256),
        "Email" character varying(256),
        "NormalizedEmail" character varying(256),
        "EmailConfirmed" boolean NOT NULL,
        "PasswordHash" text,
        "SecurityStamp" text,
        "ConcurrencyStamp" text,
        "PhoneNumber" text,
        "PhoneNumberConfirmed" boolean NOT NULL,
        "TwoFactorEnabled" boolean NOT NULL,
        "LockoutEnd" timestamp with time zone,
        "LockoutEnabled" boolean NOT NULL,
        "AccessFailedCount" integer NOT NULL,
        "Name" text,
        "SignatureImageBase64" text,
        "Archived" boolean NOT NULL,
        CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "Organizations" (
        "OrganizationId" integer GENERATED BY DEFAULT AS IDENTITY,
        "Name" text NOT NULL,
        "Description" character varying(300),
        "Url" character varying(300),
        "Phone" character varying(100),
        "Email" character varying(300),
        "LogoUrl" character varying(300),
        "LogoBase64" text,
        "VatId" text,
        "AccountNumber" text,
        CONSTRAINT "PK_Organizations" PRIMARY KEY ("OrganizationId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "PaymentMethods" (
        "Provider" integer NOT NULL,
        "Type" integer NOT NULL,
        "Name" text,
        "Active" boolean NOT NULL,
        "AdminOnly" boolean NOT NULL,
        "IsDefault" boolean NOT NULL,
        CONSTRAINT "PK_PaymentMethods" PRIMARY KEY ("Provider")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetRoleClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "RoleId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetUserClaims" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text,
        CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetUserLogins" (
        "LoginProvider" text NOT NULL,
        "ProviderKey" text NOT NULL,
        "ProviderDisplayName" text,
        "UserId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
        CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetUserRoles" (
        "UserId" text NOT NULL,
        "RoleId" text NOT NULL,
        CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
        CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "AspNetUserTokens" (
        "UserId" text NOT NULL,
        "LoginProvider" text NOT NULL,
        "Name" text NOT NULL,
        "Value" text,
        CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
        CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "Certificates" (
        "CertificateId" integer GENERATED BY DEFAULT AS IDENTITY,
        "CertificateGuid" uuid NOT NULL,
        "Auth" uuid NOT NULL,
        "Status" integer NOT NULL,
        "StatusComment" text,
        "Title" text NOT NULL,
        "Description" text,
        "Comment" text,
        "RecipientName" text,
        "RecipientEmail" text,
        "RecipientUserId" text,
        "EvidenceDescription" text,
        "IssuingOrganizationName" text,
        "IssuingOrganizationId" integer,
        "IssuedByName" text,
        "IssuingUserId" text,
        "IssuedInCity" text,
        "IssuedDate" timestamp without time zone NOT NULL,
        CONSTRAINT "PK_Certificates" PRIMARY KEY ("CertificateId"),
        CONSTRAINT "FK_Certificates_Organizations_IssuingOrganizationId" FOREIGN KEY ("IssuingOrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE RESTRICT,
        CONSTRAINT "FK_Certificates_AspNetUsers_IssuingUserId" FOREIGN KEY ("IssuingUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
        CONSTRAINT "FK_Certificates_AspNetUsers_RecipientUserId" FOREIGN KEY ("RecipientUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "EventInfos" (
        "EventInfoId" integer GENERATED BY DEFAULT AS IDENTITY,
        "Status" integer NOT NULL,
        "Type" integer NOT NULL,
        "Title" text,
        "Code" text NOT NULL,
        "Category" text,
        "Description" character varying(300),
        "Featured" boolean NOT NULL,
        "MoreInformation" text,
        "Program" text,
        "PracticalInformation" text,
        "WelcomeLetter" text,
        "OnDemand" boolean NOT NULL,
        "Published" boolean NOT NULL,
        "ManageRegistrations" boolean NOT NULL,
        "ExternalInfoPageUrl" text,
        "ExternalRegistrationsUrl" text,
        "InformationRequest" text,
        "Location" text,
        "City" text,
        "DateStart" timestamp without time zone,
        "DateEnd" timestamp without time zone,
        "LastRegistrationDate" timestamp without time zone,
        "LastCancellationDate" timestamp without time zone,
        "MaxParticipants" integer NOT NULL,
        "CertificateTitle" text,
        "CertificateDescription" text,
        "FeaturedImageUrl" text,
        "FeaturedImageCaption" text,
        "ProjectCode" text,
        "OrganizerUserId" text,
        "OrganizationId" integer,
        CONSTRAINT "PK_EventInfos" PRIMARY KEY ("EventInfoId"),
        CONSTRAINT "FK_EventInfos_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE RESTRICT,
        CONSTRAINT "FK_EventInfos_AspNetUsers_OrganizerUserId" FOREIGN KEY ("OrganizerUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "MessageLogs" (
        "MessageLogId" integer GENERATED BY DEFAULT AS IDENTITY,
        "EventInfoId" integer NOT NULL,
        "Recipients" text,
        "MessageContent" text,
        "MessageType" text,
        "TimeStamp" timestamp without time zone NOT NULL,
        "Provider" text,
        "Result" text,
        CONSTRAINT "PK_MessageLogs" PRIMARY KEY ("MessageLogId"),
        CONSTRAINT "FK_MessageLogs_EventInfos_EventInfoId" FOREIGN KEY ("EventInfoId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "Products" (
        "ProductId" integer GENERATED BY DEFAULT AS IDENTITY,
        "Name" text NOT NULL,
        "Description" character varying(300),
        "MoreInformation" text,
        "EnableQuantity" boolean NOT NULL,
        "MinimumQuantity" integer NOT NULL,
        "Price" numeric NOT NULL,
        "VatPercent" integer NOT NULL,
        "Inventory" integer NOT NULL,
        "Published" boolean NOT NULL,
        "DisplayOrder" integer NOT NULL,
        "EventInfoId" integer NOT NULL,
        CONSTRAINT "PK_Products" PRIMARY KEY ("ProductId"),
        CONSTRAINT "FK_Products_EventInfos_EventInfoId" FOREIGN KEY ("EventInfoId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "Registrations" (
        "RegistrationId" integer GENERATED BY DEFAULT AS IDENTITY,
        "EventInfoId" integer NOT NULL,
        "UserId" text,
        "Status" integer NOT NULL,
        "Type" integer NOT NULL,
        "Diploma" boolean NOT NULL,
        "ParticipantName" text,
        "ParticipantJobTitle" text,
        "ParticipantEmployer" text,
        "ParticipantCity" text,
        "CustomerName" text,
        "CustomerEmail" text,
        "CustomerAddress" text,
        "CustomerZip" text,
        "CustomerCity" text,
        "CustomerCountry" text,
        "CustomerVatNumber" text,
        "CustomerInvoiceReference" text,
        "Notes" text,
        "Log" text,
        "RegistrationTime" timestamp without time zone,
        "RegistrationBy" text,
        "FreeRegistration" boolean NOT NULL,
        "PaymentMethod" integer NOT NULL,
        "Verified" boolean NOT NULL,
        "VerificationCode" text,
        "CertificateId" integer,
        "CertificateComment" text,
        CONSTRAINT "PK_Registrations" PRIMARY KEY ("RegistrationId"),
        CONSTRAINT "FK_Registrations_Certificates_CertificateId" FOREIGN KEY ("CertificateId") REFERENCES "Certificates" ("CertificateId") ON DELETE RESTRICT,
        CONSTRAINT "FK_Registrations_EventInfos_EventInfoId" FOREIGN KEY ("EventInfoId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE CASCADE,
        CONSTRAINT "FK_Registrations_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "ProductVariants" (
        "ProductVariantId" integer GENERATED BY DEFAULT AS IDENTITY,
        "Name" text,
        "Description" character varying(300),
        "Price" numeric NOT NULL,
        "VatPercent" integer NOT NULL,
        "AdminOnly" boolean NOT NULL,
        "Inventory" integer NOT NULL,
        "Published" boolean NOT NULL,
        "ProductId" integer NOT NULL,
        CONSTRAINT "PK_ProductVariants" PRIMARY KEY ("ProductVariantId"),
        CONSTRAINT "FK_ProductVariants_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("ProductId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "Orders" (
        "OrderId" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" text,
        "RegistrationId" integer NOT NULL,
        "ExternalInvoiceId" text,
        "Paid" boolean NOT NULL,
        "Status" integer NOT NULL,
        "CustomerName" text,
        "CustomerEmail" text,
        "CustomerVatNumber" text,
        "CustomerInvoiceReference" text,
        "PaymentMethod" integer NOT NULL,
        "OrderTime" timestamp without time zone NOT NULL,
        "Comments" text,
        "Log" text,
        CONSTRAINT "PK_Orders" PRIMARY KEY ("OrderId"),
        CONSTRAINT "FK_Orders_Registrations_RegistrationId" FOREIGN KEY ("RegistrationId") REFERENCES "Registrations" ("RegistrationId") ON DELETE CASCADE,
        CONSTRAINT "FK_Orders_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE TABLE "OrderLines" (
        "OrderLineId" integer GENERATED BY DEFAULT AS IDENTITY,
        "OrderId" integer NOT NULL,
        "ProductId" integer,
        "ProductVariantId" integer,
        "Quantity" integer NOT NULL,
        "ProductName" text,
        "ProductDescription" text,
        "ProductVariantName" text,
        "ProductVariantDescription" text,
        "RefundOrderId" integer,
        "RefundOrderLineId" integer,
        "Price" numeric NOT NULL,
        "VatPercent" numeric NOT NULL,
        "Comments" text,
        CONSTRAINT "PK_OrderLines" PRIMARY KEY ("OrderLineId"),
        CONSTRAINT "FK_OrderLines_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES "Orders" ("OrderId") ON DELETE CASCADE,
        CONSTRAINT "FK_OrderLines_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("ProductId") ON DELETE RESTRICT,
        CONSTRAINT "FK_OrderLines_ProductVariants_ProductVariantId" FOREIGN KEY ("ProductVariantId") REFERENCES "ProductVariants" ("ProductVariantId") ON DELETE RESTRICT,
        CONSTRAINT "FK_OrderLines_Orders_RefundOrderId" FOREIGN KEY ("RefundOrderId") REFERENCES "Orders" ("OrderId") ON DELETE RESTRICT,
        CONSTRAINT "FK_OrderLines_OrderLines_RefundOrderLineId" FOREIGN KEY ("RefundOrderLineId") REFERENCES "OrderLines" ("OrderLineId") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Certificates_IssuingOrganizationId" ON "Certificates" ("IssuingOrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Certificates_IssuingUserId" ON "Certificates" ("IssuingUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Certificates_RecipientUserId" ON "Certificates" ("RecipientUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_EventInfos_OrganizationId" ON "EventInfos" ("OrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_EventInfos_OrganizerUserId" ON "EventInfos" ("OrganizerUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_MessageLogs_EventInfoId" ON "MessageLogs" ("EventInfoId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_OrderLines_OrderId" ON "OrderLines" ("OrderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_OrderLines_ProductId" ON "OrderLines" ("ProductId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_OrderLines_ProductVariantId" ON "OrderLines" ("ProductVariantId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_OrderLines_RefundOrderId" ON "OrderLines" ("RefundOrderId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_OrderLines_RefundOrderLineId" ON "OrderLines" ("RefundOrderLineId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Orders_RegistrationId" ON "Orders" ("RegistrationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Orders_UserId" ON "Orders" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Products_EventInfoId" ON "Products" ("EventInfoId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_ProductVariants_ProductId" ON "ProductVariants" ("ProductId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Registrations_CertificateId" ON "Registrations" ("CertificateId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Registrations_EventInfoId" ON "Registrations" ("EventInfoId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    CREATE INDEX "IX_Registrations_UserId" ON "Registrations" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200105175922_InitialMigration') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200105175922_InitialMigration', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200604144542_LmsEnrollmentFields') THEN
    ALTER TABLE "Registrations" ADD "EnrolledInLms" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200604144542_LmsEnrollmentFields') THEN
    ALTER TABLE "EventInfos" ADD "LmsCourseId" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200604144542_LmsEnrollmentFields') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200604144542_LmsEnrollmentFields', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    ALTER TABLE "Registrations" DROP COLUMN "EnrolledInLms";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    ALTER TABLE "EventInfos" DROP COLUMN "LmsCourseId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE TABLE "ExternalAccounts" (
        "LocalId" integer GENERATED BY DEFAULT AS IDENTITY,
        "ExternalServiceName" text NOT NULL,
        "ExternalAccountId" text NOT NULL,
        "DisplayName" text NOT NULL,
        "RegistrationId" integer,
        "UserId" text,
        CONSTRAINT "PK_ExternalAccounts" PRIMARY KEY ("LocalId"),
        CONSTRAINT "FK_ExternalAccounts_Registrations_RegistrationId" FOREIGN KEY ("RegistrationId") REFERENCES "Registrations" ("RegistrationId") ON DELETE RESTRICT,
        CONSTRAINT "FK_ExternalAccounts_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE TABLE "ExternalEvents" (
        "LocalId" integer GENERATED BY DEFAULT AS IDENTITY,
        "EventInfoId" integer NOT NULL,
        "ExternalServiceName" text NOT NULL,
        "ExternalEventId" text NOT NULL,
        CONSTRAINT "PK_ExternalEvents" PRIMARY KEY ("LocalId"),
        CONSTRAINT "FK_ExternalEvents_EventInfos_EventInfoId" FOREIGN KEY ("EventInfoId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE TABLE "ExternalRegistrations" (
        "LocalId" integer GENERATED BY DEFAULT AS IDENTITY,
        "ExternalRegistrationId" text,
        "ExternalEventId" integer NOT NULL,
        "ExternalAccountId" integer NOT NULL,
        "RegistrationId" integer NOT NULL,
        CONSTRAINT "PK_ExternalRegistrations" PRIMARY KEY ("LocalId"),
        CONSTRAINT "FK_ExternalRegistrations_ExternalAccounts_ExternalAccountId" FOREIGN KEY ("ExternalAccountId") REFERENCES "ExternalAccounts" ("LocalId") ON DELETE CASCADE,
        CONSTRAINT "FK_ExternalRegistrations_ExternalEvents_ExternalEventId" FOREIGN KEY ("ExternalEventId") REFERENCES "ExternalEvents" ("LocalId") ON DELETE CASCADE,
        CONSTRAINT "FK_ExternalRegistrations_Registrations_RegistrationId" FOREIGN KEY ("RegistrationId") REFERENCES "Registrations" ("RegistrationId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE INDEX "IX_ExternalAccounts_RegistrationId" ON "ExternalAccounts" ("RegistrationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE INDEX "IX_ExternalAccounts_UserId" ON "ExternalAccounts" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE UNIQUE INDEX "IX_ExternalAccounts_ExternalServiceName_ExternalAccountId" ON "ExternalAccounts" ("ExternalServiceName", "ExternalAccountId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE UNIQUE INDEX "IX_ExternalEvents_EventInfoId_ExternalServiceName_ExternalEven~" ON "ExternalEvents" ("EventInfoId", "ExternalServiceName", "ExternalEventId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE INDEX "IX_ExternalRegistrations_ExternalEventId" ON "ExternalRegistrations" ("ExternalEventId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE INDEX "IX_ExternalRegistrations_RegistrationId" ON "ExternalRegistrations" ("RegistrationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    CREATE UNIQUE INDEX "IX_ExternalRegistrations_ExternalAccountId_ExternalEventId" ON "ExternalRegistrations" ("ExternalAccountId", "ExternalEventId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200917102534_ExternalEvents') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200917102534_ExternalEvents', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    ALTER TABLE "Organizations" ADD "Active" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    CREATE TABLE "OrganizationHostnames" (
        "OrganizationId" integer NOT NULL,
        "Hostname" character varying(300) NOT NULL,
        "Active" boolean NOT NULL,
        CONSTRAINT "PK_OrganizationHostnames" PRIMARY KEY ("OrganizationId", "Hostname"),
        CONSTRAINT "FK_OrganizationHostnames_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    CREATE TABLE "OrganizationMembers" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" text,
        "OrganizationId" integer NOT NULL,
        CONSTRAINT "PK_OrganizationMembers" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_OrganizationMembers_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE CASCADE,
        CONSTRAINT "FK_OrganizationMembers_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    CREATE UNIQUE INDEX "IX_OrganizationHostnames_Hostname" ON "OrganizationHostnames" ("Hostname") WHERE "Active" = true;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    CREATE INDEX "IX_OrganizationMembers_UserId" ON "OrganizationMembers" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    CREATE UNIQUE INDEX "IX_OrganizationMembers_OrganizationId_UserId" ON "OrganizationMembers" ("OrganizationId", "UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200929074958_NewOrgStructure') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200929074958_NewOrgStructure', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200930061949_OrgMembershipRoles') THEN
    CREATE TABLE "OrganizationMemberRoles" (
        "OrganizationMemberId" integer NOT NULL,
        "Role" text NOT NULL,
        CONSTRAINT "PK_OrganizationMemberRoles" PRIMARY KEY ("OrganizationMemberId", "Role"),
        CONSTRAINT "FK_OrganizationMemberRoles_OrganizationMembers_OrganizationMem~" FOREIGN KEY ("OrganizationMemberId") REFERENCES "OrganizationMembers" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200930061949_OrgMembershipRoles') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200930061949_OrgMembershipRoles', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20201012114945_OrgIsRootProperty') THEN
    ALTER TABLE "Organizations" ADD "IsRoot" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20201012114945_OrgIsRootProperty') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20201012114945_OrgIsRootProperty', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210105043828_EventCollections') THEN
    CREATE TABLE "EventCollections" (
        "CollectionId" integer GENERATED BY DEFAULT AS IDENTITY,
        "OrganizationId" integer NOT NULL,
        "Name" text NOT NULL,
        "Slug" text,
        "Description" text,
        "Featured" boolean NOT NULL,
        "FeaturedImageUrl" text,
        "FeaturedImageCaption" text,
        CONSTRAINT "PK_EventCollections" PRIMARY KEY ("CollectionId"),
        CONSTRAINT "FK_EventCollections_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210105043828_EventCollections') THEN
    CREATE TABLE "EventCollectionMappings" (
        "CollectionId" integer NOT NULL,
        "EventId" integer NOT NULL,
        CONSTRAINT "PK_EventCollectionMappings" PRIMARY KEY ("CollectionId", "EventId"),
        CONSTRAINT "FK_EventCollectionMappings_EventCollections_CollectionId" FOREIGN KEY ("CollectionId") REFERENCES "EventCollections" ("CollectionId") ON DELETE CASCADE,
        CONSTRAINT "FK_EventCollectionMappings_EventInfos_EventId" FOREIGN KEY ("EventId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210105043828_EventCollections') THEN
    CREATE INDEX "IX_EventCollectionMappings_EventId" ON "EventCollectionMappings" ("EventId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210105043828_EventCollections') THEN
    CREATE INDEX "IX_EventCollections_OrganizationId" ON "EventCollections" ("OrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210105043828_EventCollections') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210105043828_EventCollections', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210412130635_EventInfoArchivedField') THEN
    ALTER TABLE "EventInfos" ADD "Archived" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210412130635_EventInfoArchivedField') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210412130635_EventInfoArchivedField', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509134017_RequireEventOrganization') THEN
    ALTER TABLE "EventInfos" DROP CONSTRAINT "FK_EventInfos_Organizations_OrganizationId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509134017_RequireEventOrganization') THEN
    UPDATE "EventInfos" SET "OrganizationId" = 0 WHERE "OrganizationId" IS NULL;
    ALTER TABLE "EventInfos" ALTER COLUMN "OrganizationId" SET NOT NULL;
    ALTER TABLE "EventInfos" ALTER COLUMN "OrganizationId" SET DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509134017_RequireEventOrganization') THEN
    ALTER TABLE "EventInfos" ADD CONSTRAINT "FK_EventInfos_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE CASCADE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509134017_RequireEventOrganization') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210509134017_RequireEventOrganization', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509212610_RenameCodeToSlug') THEN
    ALTER TABLE "EventInfos" RENAME COLUMN "Code" TO "Slug";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509212610_RenameCodeToSlug') THEN
    ALTER TABLE "EventInfos" ADD "Headline" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210509212610_RenameCodeToSlug') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210509212610_RenameCodeToSlug', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210516150540_AddProductsArchivedField') THEN
    ALTER TABLE "ProductVariants" ADD "Archived" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210516150540_AddProductsArchivedField') THEN
    ALTER TABLE "Products" ADD "Archived" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210516150540_AddProductsArchivedField') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210516150540_AddProductsArchivedField', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210606142126_OrganizationSettings') THEN
    CREATE TABLE "OrganizationSettings" (
        "OrganizationId" integer NOT NULL,
        "Name" text NOT NULL,
        "Value" text,
        CONSTRAINT "PK_OrganizationSettings" PRIMARY KEY ("OrganizationId", "Name"),
        CONSTRAINT "FK_OrganizationSettings_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210606142126_OrganizationSettings') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210606142126_OrganizationSettings', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    ALTER TABLE "Orders" ADD "InvoiceId" integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    CREATE TABLE "Invoices" (
        "InvoiceId" integer GENERATED BY DEFAULT AS IDENTITY,
        "ExternalInvoiceId" text NOT NULL,
        "Paid" boolean NOT NULL,
        CONSTRAINT "PK_Invoices" PRIMARY KEY ("InvoiceId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    CREATE INDEX "IX_Orders_InvoiceId" ON "Orders" ("InvoiceId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    ALTER TABLE "Orders" ADD CONSTRAINT "FK_Orders_Invoices_InvoiceId" FOREIGN KEY ("InvoiceId") REFERENCES "Invoices" ("InvoiceId") ON DELETE RESTRICT;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    alter table "Invoices" add column "OrderId" int
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    insert into "Invoices" 
    ("ExternalInvoiceId", "Paid", "OrderId")
    select "ExternalInvoiceId", "Paid", "OrderId"
    from "Orders" 
    where "Status" = 2
    and "ExternalInvoiceId" is not null
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    update "Orders"
    set "InvoiceId" = i."InvoiceId"
    from "Orders" o
    join "Invoices" i
    on o."OrderId" = i."OrderId"
    where o."Status" = 2
    and o."ExternalInvoiceId" is not null

    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20210820053849_AddInvoiceEntity') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20210820053849_AddInvoiceEntity', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211020074510_ProductVisibilityAndEventCollectionArchivedFields') THEN
    ALTER TABLE "Products" ADD "Visibility" integer NOT NULL DEFAULT 1;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211020074510_ProductVisibilityAndEventCollectionArchivedFields') THEN
    ALTER TABLE "Invoices" ALTER COLUMN "ExternalInvoiceId" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211020074510_ProductVisibilityAndEventCollectionArchivedFields') THEN
    ALTER TABLE "EventCollections" ADD "Archived" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211020074510_ProductVisibilityAndEventCollectionArchivedFields') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211020074510_ProductVisibilityAndEventCollectionArchivedFields', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE TABLE "Notifications" (
        "NotificationId" integer GENERATED BY DEFAULT AS IDENTITY,
        "OrganizationId" integer,
        "EventInfoId" integer,
        "ProductId" integer,
        "CreatedByUserId" text NOT NULL,
        "Message" text NOT NULL,
        "Created" timestamp without time zone NOT NULL,
        "StatusUpdated" timestamp without time zone NOT NULL,
        "Status" integer NOT NULL,
        "Discriminator" text NOT NULL,
        "Subject" text,
        CONSTRAINT "PK_Notifications" PRIMARY KEY ("NotificationId"),
        CONSTRAINT "FK_Notifications_AspNetUsers_CreatedByUserId" FOREIGN KEY ("CreatedByUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_Notifications_EventInfos_EventInfoId" FOREIGN KEY ("EventInfoId") REFERENCES "EventInfos" ("EventInfoId") ON DELETE RESTRICT,
        CONSTRAINT "FK_Notifications_Organizations_OrganizationId" FOREIGN KEY ("OrganizationId") REFERENCES "Organizations" ("OrganizationId") ON DELETE RESTRICT,
        CONSTRAINT "FK_Notifications_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("ProductId") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE TABLE "NotificationRecipients" (
        "RecipientId" integer GENERATED BY DEFAULT AS IDENTITY,
        "NotificationId" integer NOT NULL,
        "RecipientUserId" text,
        "RegistrationId" integer,
        "RecipientName" text,
        "RecipientIdentifier" text,
        "Created" timestamp without time zone NOT NULL,
        "Sent" timestamp without time zone,
        "Errors" text,
        CONSTRAINT "PK_NotificationRecipients" PRIMARY KEY ("RecipientId"),
        CONSTRAINT "FK_NotificationRecipients_AspNetUsers_RecipientUserId" FOREIGN KEY ("RecipientUserId") REFERENCES "AspNetUsers" ("Id") ON DELETE RESTRICT,
        CONSTRAINT "FK_NotificationRecipients_Notifications_NotificationId" FOREIGN KEY ("NotificationId") REFERENCES "Notifications" ("NotificationId") ON DELETE CASCADE,
        CONSTRAINT "FK_NotificationRecipients_Registrations_RegistrationId" FOREIGN KEY ("RegistrationId") REFERENCES "Registrations" ("RegistrationId") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_NotificationRecipients_NotificationId" ON "NotificationRecipients" ("NotificationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_NotificationRecipients_RecipientUserId" ON "NotificationRecipients" ("RecipientUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_NotificationRecipients_RegistrationId" ON "NotificationRecipients" ("RegistrationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_Notifications_CreatedByUserId" ON "Notifications" ("CreatedByUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_Notifications_EventInfoId" ON "Notifications" ("EventInfoId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_Notifications_OrganizationId" ON "Notifications" ("OrganizationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    CREATE INDEX "IX_Notifications_ProductId" ON "Notifications" ("ProductId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211026191751_AddSmsEmailNotificationEntities') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211026191751_AddSmsEmailNotificationEntities', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211029105120_AddNotificationTypeAndStats') THEN
    ALTER TABLE "Notifications" DROP COLUMN "Discriminator";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211029105120_AddNotificationTypeAndStats') THEN
    ALTER TABLE "Notifications" ADD "Type" integer NOT NULL DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211029105120_AddNotificationTypeAndStats') THEN
    CREATE TABLE "NotificationStatistics" (
        "NotificationStatisticsId" integer GENERATED BY DEFAULT AS IDENTITY,
        "NotificationId" integer NOT NULL,
        "SentTotal" integer NOT NULL,
        "ErrorsTotal" integer NOT NULL,
        CONSTRAINT "PK_NotificationStatistics" PRIMARY KEY ("NotificationStatisticsId"),
        CONSTRAINT "FK_NotificationStatistics_Notifications_NotificationId" FOREIGN KEY ("NotificationId") REFERENCES "Notifications" ("NotificationId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211029105120_AddNotificationTypeAndStats') THEN
    CREATE UNIQUE INDEX "IX_NotificationStatistics_NotificationId" ON "NotificationStatistics" ("NotificationId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211029105120_AddNotificationTypeAndStats') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20211029105120_AddNotificationTypeAndStats', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "Registrations" ALTER COLUMN "RegistrationTime" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "Orders" ALTER COLUMN "OrderTime" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "NotificationStatistics" ADD "RecipientsTotal" integer NOT NULL DEFAULT 0;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "Notifications" ALTER COLUMN "StatusUpdated" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "Notifications" ALTER COLUMN "Created" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "NotificationRecipients" ALTER COLUMN "Sent" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    UPDATE "NotificationRecipients" SET "RecipientIdentifier" = '' WHERE "RecipientIdentifier" IS NULL;
    ALTER TABLE "NotificationRecipients" ALTER COLUMN "RecipientIdentifier" SET NOT NULL;
    ALTER TABLE "NotificationRecipients" ALTER COLUMN "RecipientIdentifier" SET DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "NotificationRecipients" ALTER COLUMN "Created" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "MessageLogs" ALTER COLUMN "TimeStamp" TYPE timestamp with time zone;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "EventInfos" ALTER COLUMN "LastRegistrationDate" TYPE date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "EventInfos" ALTER COLUMN "LastCancellationDate" TYPE date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "EventInfos" ALTER COLUMN "DateStart" TYPE date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "EventInfos" ALTER COLUMN "DateEnd" TYPE date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    ALTER TABLE "Certificates" ALTER COLUMN "IssuedDate" TYPE date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20220402072343_ShiftToNodaTime') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20220402072343_ShiftToNodaTime', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20230906111207_EventInfo_AddOptionsWithPolicies') THEN
    ALTER TABLE "EventInfos" ADD "Options_RegistrationPolicy_AllowModificationsAfterLastCancella~" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20230906111207_EventInfo_AddOptionsWithPolicies') THEN
    ALTER TABLE "EventInfos" ADD "Options_RegistrationPolicy_AllowedRegistrationEditHours" integer;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20230906111207_EventInfo_AddOptionsWithPolicies') THEN
    UPDATE public."EventInfos"
    SET "Options_RegistrationPolicy_AllowedRegistrationEditHours" = 24;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20230906111207_EventInfo_AddOptionsWithPolicies') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20230906111207_EventInfo_AddOptionsWithPolicies', '8.0.2');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "AddressLine1" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "AddressLine2" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "BirthDate" date;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "BirthDateVerified" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "City" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "Country" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "Employer" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "EmployerIdentificationNumber" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "FamilyName" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "GivenName" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "JobRole" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "Log" jsonb NOT NULL DEFAULT '{}';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "MiddleName" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "NameVerified" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "PictureUrl" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "Profession" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "ProfessionalIdentityNumber" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "ProfessionalIdentityNumberVerified" boolean NOT NULL DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "SupplementaryInformation" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    ALTER TABLE "AspNetUsers" ADD "ZipCode" text;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20240212195621_ExtendUserprofile') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20240212195621_ExtendUserprofile', '8.0.2');
    END IF;
END $EF$;
COMMIT;

