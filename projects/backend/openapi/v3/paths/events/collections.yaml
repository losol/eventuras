get:
  summary: Get event collections list.
  operationId: getEventCollectionsList
  tags:
    - events
    - collections
  parameters:
    - name: id
      in: path
      description: Event ID.
      required: true
      schema:
        type: integer
        format: int32
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../schemas/events/EventCollectionDto.yaml'
    '400':
      $ref: 'eventuras-api.v3.yaml#/components/responses/InvalidRequestError'
    '401':
      $ref: 'eventuras-api.v3.yaml#/components/responses/UnauthorizedError'
    '403':
      $ref: 'eventuras-api.v3.yaml#/components/responses/ForbiddenError'
    '404':
      $ref: 'eventuras-api.v3.yaml#/components/responses/NotFound'
    '500':
      $ref: 'eventuras-api.v3.yaml#/components/responses/InternalServerError'

post:
  summary: Create new event collection.
  operationId: createNewEventCollection
  tags:
    - events
    - collections
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../../schemas/events/EventCollectionDto.yaml'
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: '../../schemas/events/EventCollectionDto.yaml'
    '400':
      $ref: 'eventuras-api.v3.yaml#/components/responses/InvalidRequestError'
    '401':
      $ref: 'eventuras-api.v3.yaml#/components/responses/UnauthorizedError'
    '403':
      $ref: 'eventuras-api.v3.yaml#/components/responses/ForbiddenError'
    '500':
      $ref: 'eventuras-api.v3.yaml#/components/responses/InternalServerError'
