// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-fetch';
import type { GetV3CertificatesByIdData, GetV3CertificatesByIdError, GetV3CertificatesByIdResponse, GetV3EventByIdCertificatesData, GetV3EventByIdCertificatesError, GetV3EventByIdCertificatesResponse, GetV3EventByIdCertificatesPreviewData, GetV3EventByIdCertificatesPreviewError, GetV3EventByIdCertificatesPreviewResponse, PostV3EventByIdCertificatesIssueData, PostV3EventByIdCertificatesIssueError, PostV3EventByIdCertificatesIssueResponse, PostV3EventByIdCertificatesUpdateData, PostV3EventByIdCertificatesUpdateError, PostV3EventByIdCertificatesUpdateResponse, GetV3EventcollectionsData, GetV3EventcollectionsError, GetV3EventcollectionsResponse, PostV3EventcollectionsData, PostV3EventcollectionsError, PostV3EventcollectionsResponse, GetV3EventcollectionsByIdData, GetV3EventcollectionsByIdError, GetV3EventcollectionsByIdResponse, PutV3EventcollectionsByIdData, PutV3EventcollectionsByIdError, PutV3EventcollectionsByIdResponse, DeleteV3EventcollectionsByIdData, DeleteV3EventcollectionsByIdError, DeleteV3EventcollectionsByIdResponse, PutV3EventsByEventIdCollectionsByCollectionIdData, PutV3EventsByEventIdCollectionsByCollectionIdError, PutV3EventsByEventIdCollectionsByCollectionIdResponse, DeleteV3EventsByEventIdCollectionsByCollectionIdData, DeleteV3EventsByEventIdCollectionsByCollectionIdError, DeleteV3EventsByEventIdCollectionsByCollectionIdResponse, GetV3EventsByEventIdProductsData, GetV3EventsByEventIdProductsError, GetV3EventsByEventIdProductsResponse, PostV3EventsByEventIdProductsData, PostV3EventsByEventIdProductsError, PostV3EventsByEventIdProductsResponse, PutV3EventsByEventIdProductsByProductIdData, PutV3EventsByEventIdProductsByProductIdError, PutV3EventsByEventIdProductsByProductIdResponse, DeleteV3EventsByEventIdProductsByProductIdData, DeleteV3EventsByEventIdProductsByProductIdError, DeleteV3EventsByEventIdProductsByProductIdResponse, GetV3EventsByEventIdProductsByProductIdVariantsData, GetV3EventsByEventIdProductsByProductIdVariantsError, GetV3EventsByEventIdProductsByProductIdVariantsResponse, PostV3EventsByEventIdProductsByProductIdVariantsData, PostV3EventsByEventIdProductsByProductIdVariantsError, PostV3EventsByEventIdProductsByProductIdVariantsResponse, DeleteV3EventsByEventIdProductsByProductIdVariantsByIdData, DeleteV3EventsByEventIdProductsByProductIdVariantsByIdError, DeleteV3EventsByEventIdProductsByProductIdVariantsByIdResponse, GetV3EventsData, GetV3EventsError, GetV3EventsResponse, PostV3EventsData, PostV3EventsError, PostV3EventsResponse, GetV3EventsByIdData, GetV3EventsByIdError, GetV3EventsByIdResponse, PutV3EventsByIdData, PutV3EventsByIdError, PutV3EventsByIdResponse, PatchV3EventsByIdData, PatchV3EventsByIdError, PatchV3EventsByIdResponse, DeleteV3EventsByIdData, DeleteV3EventsByIdError, DeleteV3EventsByIdResponse, GetV3EventsByEventIdStatisticsData, GetV3EventsByEventIdStatisticsError, GetV3EventsByEventIdStatisticsResponse, GetV3InvoicesByIdData, GetV3InvoicesByIdError, GetV3InvoicesByIdResponse, PostV3InvoicesData, PostV3InvoicesError, PostV3InvoicesResponse, GetV3NotificationsByIdRecipientsData, GetV3NotificationsByIdRecipientsError, GetV3NotificationsByIdRecipientsResponse, GetV3NotificationsByIdData, GetV3NotificationsByIdError, GetV3NotificationsByIdResponse, GetV3NotificationsData, GetV3NotificationsError, GetV3NotificationsResponse, PostV3NotificationsEmailData, PostV3NotificationsEmailError, PostV3NotificationsEmailResponse, PostV3NotificationsSmsData, PostV3NotificationsSmsError, PostV3NotificationsSmsResponse, GetV3OnlinecoursesData, GetV3OnlinecoursesError, GetV3OnlinecoursesResponse, GetV3OnlinecoursesByIdData, GetV3OnlinecoursesByIdError, GetV3OnlinecoursesByIdResponse, GetV3OrdersByIdData, GetV3OrdersByIdError, GetV3OrdersByIdResponse, PatchV3OrdersByIdData, PatchV3OrdersByIdError, PatchV3OrdersByIdResponse, PutV3OrdersByIdData, PutV3OrdersByIdError, PutV3OrdersByIdResponse, DeleteV3OrdersByIdData, DeleteV3OrdersByIdError, DeleteV3OrdersByIdResponse, GetV3OrdersData, GetV3OrdersError, GetV3OrdersResponse, PostV3OrdersData, PostV3OrdersError, PostV3OrdersResponse, GetV3OrganizationsByOrganizationIdMembersByUserIdRolesData, GetV3OrganizationsByOrganizationIdMembersByUserIdRolesError, GetV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, PostV3OrganizationsByOrganizationIdMembersByUserIdRolesData, PostV3OrganizationsByOrganizationIdMembersByUserIdRolesError, PostV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesData, DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesError, DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, PutV3OrganizationsByOrganizationIdMembersByUserIdData, PutV3OrganizationsByOrganizationIdMembersByUserIdError, PutV3OrganizationsByOrganizationIdMembersByUserIdResponse, DeleteV3OrganizationsByOrganizationIdMembersByUserIdData, DeleteV3OrganizationsByOrganizationIdMembersByUserIdError, DeleteV3OrganizationsByOrganizationIdMembersByUserIdResponse, GetV3OrganizationsData, GetV3OrganizationsError, GetV3OrganizationsResponse, PostV3OrganizationsData, PostV3OrganizationsError, PostV3OrganizationsResponse, GetV3OrganizationsByOrganizationIdData, GetV3OrganizationsByOrganizationIdError, GetV3OrganizationsByOrganizationIdResponse, PutV3OrganizationsByOrganizationIdData, PutV3OrganizationsByOrganizationIdError, PutV3OrganizationsByOrganizationIdResponse, DeleteV3OrganizationsByOrganizationIdData, DeleteV3OrganizationsByOrganizationIdError, DeleteV3OrganizationsByOrganizationIdResponse, GetV3OrganizationsByOrganizationIdSettingsData, GetV3OrganizationsByOrganizationIdSettingsError, GetV3OrganizationsByOrganizationIdSettingsResponse, PutV3OrganizationsByOrganizationIdSettingsData, PutV3OrganizationsByOrganizationIdSettingsError, PutV3OrganizationsByOrganizationIdSettingsResponse, PostV3OrganizationsByOrganizationIdSettingsData, PostV3OrganizationsByOrganizationIdSettingsError, PostV3OrganizationsByOrganizationIdSettingsResponse, GetV3ProductsByProductIdSummaryData, GetV3ProductsByProductIdSummaryError, GetV3ProductsByProductIdSummaryResponse, PostV3RegistrationsByIdCertificateSendData, PostV3RegistrationsByIdCertificateSendError, PostV3RegistrationsByIdCertificateSendResponse, GetV3RegistrationsByIdOrdersData, GetV3RegistrationsByIdOrdersError, GetV3RegistrationsByIdOrdersResponse, PostV3RegistrationsByIdOrdersData, PostV3RegistrationsByIdOrdersError, PostV3RegistrationsByIdOrdersResponse, PostV3RegistrationsByIdProductsData, PostV3RegistrationsByIdProductsError, PostV3RegistrationsByIdProductsResponse, GetV3RegistrationsData, GetV3RegistrationsError, GetV3RegistrationsResponse, PostV3RegistrationsData, PostV3RegistrationsError, PostV3RegistrationsResponse, GetV3RegistrationsByIdData, GetV3RegistrationsByIdError, GetV3RegistrationsByIdResponse, PutV3RegistrationsByIdData, PutV3RegistrationsByIdError, PutV3RegistrationsByIdResponse, PatchV3RegistrationsByIdData, PatchV3RegistrationsByIdError, PatchV3RegistrationsByIdResponse, DeleteV3RegistrationsByIdData, DeleteV3RegistrationsByIdError, DeleteV3RegistrationsByIdResponse, PostV3RegistrationsMeByEventIdData, PostV3RegistrationsMeByEventIdError, PostV3RegistrationsMeByEventIdResponse, GetV3UserprofileData, GetV3UserprofileError, GetV3UserprofileResponse, PutV3UserprofileData, PutV3UserprofileError, PutV3UserprofileResponse, GetV3UsersMeData, GetV3UsersMeError, GetV3UsersMeResponse, GetV3UsersByIdData, GetV3UsersByIdError, GetV3UsersByIdResponse, PutV3UsersByIdData, PutV3UsersByIdError, PutV3UsersByIdResponse, GetV3UsersData, GetV3UsersError, GetV3UsersResponse, PostV3UsersData, PostV3UsersError, PostV3UsersResponse } from './types.gen';

export const getV3CertificatesById = (options: Options<GetV3CertificatesByIdData>) => { return (options?.client ?? client).get<GetV3CertificatesByIdResponse, GetV3CertificatesByIdError>({
    ...options,
    url: '/v3/certificates/{id}'
}); };

export const getV3EventByIdCertificates = (options: Options<GetV3EventByIdCertificatesData>) => { return (options?.client ?? client).get<GetV3EventByIdCertificatesResponse, GetV3EventByIdCertificatesError>({
    ...options,
    url: '/v3/event/{id}/certificates'
}); };

export const getV3EventByIdCertificatesPreview = (options: Options<GetV3EventByIdCertificatesPreviewData>) => { return (options?.client ?? client).get<GetV3EventByIdCertificatesPreviewResponse, GetV3EventByIdCertificatesPreviewError>({
    ...options,
    url: '/v3/event/{id}/certificates/preview'
}); };

export const postV3EventByIdCertificatesIssue = (options: Options<PostV3EventByIdCertificatesIssueData>) => { return (options?.client ?? client).post<PostV3EventByIdCertificatesIssueResponse, PostV3EventByIdCertificatesIssueError>({
    ...options,
    url: '/v3/event/{id}/certificates/issue'
}); };

export const postV3EventByIdCertificatesUpdate = (options: Options<PostV3EventByIdCertificatesUpdateData>) => { return (options?.client ?? client).post<PostV3EventByIdCertificatesUpdateResponse, PostV3EventByIdCertificatesUpdateError>({
    ...options,
    url: '/v3/event/{id}/certificates/update'
}); };

export const getV3Eventcollections = (options?: Options<GetV3EventcollectionsData>) => { return (options?.client ?? client).get<GetV3EventcollectionsResponse, GetV3EventcollectionsError>({
    ...options,
    url: '/v3/eventcollections'
}); };

export const postV3Eventcollections = (options?: Options<PostV3EventcollectionsData>) => { return (options?.client ?? client).post<PostV3EventcollectionsResponse, PostV3EventcollectionsError>({
    ...options,
    url: '/v3/eventcollections'
}); };

export const getV3EventcollectionsById = (options: Options<GetV3EventcollectionsByIdData>) => { return (options?.client ?? client).get<GetV3EventcollectionsByIdResponse, GetV3EventcollectionsByIdError>({
    ...options,
    url: '/v3/eventcollections/{id}'
}); };

export const putV3EventcollectionsById = (options: Options<PutV3EventcollectionsByIdData>) => { return (options?.client ?? client).put<PutV3EventcollectionsByIdResponse, PutV3EventcollectionsByIdError>({
    ...options,
    url: '/v3/eventcollections/{id}'
}); };

export const deleteV3EventcollectionsById = (options: Options<DeleteV3EventcollectionsByIdData>) => { return (options?.client ?? client).delete<DeleteV3EventcollectionsByIdResponse, DeleteV3EventcollectionsByIdError>({
    ...options,
    url: '/v3/eventcollections/{id}'
}); };

export const putV3EventsByEventIdCollectionsByCollectionId = (options: Options<PutV3EventsByEventIdCollectionsByCollectionIdData>) => { return (options?.client ?? client).put<PutV3EventsByEventIdCollectionsByCollectionIdResponse, PutV3EventsByEventIdCollectionsByCollectionIdError>({
    ...options,
    url: '/v3/events/{eventId}/collections/{collectionId}'
}); };

export const deleteV3EventsByEventIdCollectionsByCollectionId = (options: Options<DeleteV3EventsByEventIdCollectionsByCollectionIdData>) => { return (options?.client ?? client).delete<DeleteV3EventsByEventIdCollectionsByCollectionIdResponse, DeleteV3EventsByEventIdCollectionsByCollectionIdError>({
    ...options,
    url: '/v3/events/{eventId}/collections/{collectionId}'
}); };

export const getV3EventsByEventIdProducts = (options: Options<GetV3EventsByEventIdProductsData>) => { return (options?.client ?? client).get<GetV3EventsByEventIdProductsResponse, GetV3EventsByEventIdProductsError>({
    ...options,
    url: '/v3/events/{eventId}/products'
}); };

export const postV3EventsByEventIdProducts = (options: Options<PostV3EventsByEventIdProductsData>) => { return (options?.client ?? client).post<PostV3EventsByEventIdProductsResponse, PostV3EventsByEventIdProductsError>({
    ...options,
    url: '/v3/events/{eventId}/products'
}); };

export const putV3EventsByEventIdProductsByProductId = (options: Options<PutV3EventsByEventIdProductsByProductIdData>) => { return (options?.client ?? client).put<PutV3EventsByEventIdProductsByProductIdResponse, PutV3EventsByEventIdProductsByProductIdError>({
    ...options,
    url: '/v3/events/{eventId}/products/{productId}'
}); };

export const deleteV3EventsByEventIdProductsByProductId = (options: Options<DeleteV3EventsByEventIdProductsByProductIdData>) => { return (options?.client ?? client).delete<DeleteV3EventsByEventIdProductsByProductIdResponse, DeleteV3EventsByEventIdProductsByProductIdError>({
    ...options,
    url: '/v3/events/{eventId}/products/{productId}'
}); };

export const getV3EventsByEventIdProductsByProductIdVariants = (options: Options<GetV3EventsByEventIdProductsByProductIdVariantsData>) => { return (options?.client ?? client).get<GetV3EventsByEventIdProductsByProductIdVariantsResponse, GetV3EventsByEventIdProductsByProductIdVariantsError>({
    ...options,
    url: '/v3/events/{eventId}/products/{productId}/variants'
}); };

export const postV3EventsByEventIdProductsByProductIdVariants = (options: Options<PostV3EventsByEventIdProductsByProductIdVariantsData>) => { return (options?.client ?? client).post<PostV3EventsByEventIdProductsByProductIdVariantsResponse, PostV3EventsByEventIdProductsByProductIdVariantsError>({
    ...options,
    url: '/v3/events/{eventId}/products/{productId}/variants'
}); };

export const deleteV3EventsByEventIdProductsByProductIdVariantsById = (options: Options<DeleteV3EventsByEventIdProductsByProductIdVariantsByIdData>) => { return (options?.client ?? client).delete<DeleteV3EventsByEventIdProductsByProductIdVariantsByIdResponse, DeleteV3EventsByEventIdProductsByProductIdVariantsByIdError>({
    ...options,
    url: '/v3/events/{eventId}/products/{productId}/variants/{id}'
}); };

/**
 * Retrieves a list of events based on the given query.
 */
export const getV3Events = (options?: Options<GetV3EventsData>) => { return (options?.client ?? client).get<GetV3EventsResponse, GetV3EventsError>({
    ...options,
    url: '/v3/events'
}); };

/**
 * Creates a new event.
 */
export const postV3Events = (options?: Options<PostV3EventsData>) => { return (options?.client ?? client).post<PostV3EventsResponse, PostV3EventsError>({
    ...options,
    url: '/v3/events'
}); };

/**
 * Retrieves event details by ID.
 */
export const getV3EventsById = (options: Options<GetV3EventsByIdData>) => { return (options?.client ?? client).get<GetV3EventsByIdResponse, GetV3EventsByIdError>({
    ...options,
    url: '/v3/events/{id}'
}); };

/**
 * Updates an existing event by ID.
 */
export const putV3EventsById = (options: Options<PutV3EventsByIdData>) => { return (options?.client ?? client).put<PutV3EventsByIdResponse, PutV3EventsByIdError>({
    ...options,
    url: '/v3/events/{id}'
}); };

/**
 * Partially updates a specific event by its ID using JSON Patch.
 */
export const patchV3EventsById = (options: Options<PatchV3EventsByIdData>) => { return (options?.client ?? client).patch<PatchV3EventsByIdResponse, PatchV3EventsByIdError>({
    ...options,
    url: '/v3/events/{id}'
}); };

/**
 * Deletes an event by ID.
 */
export const deleteV3EventsById = (options: Options<DeleteV3EventsByIdData>) => { return (options?.client ?? client).delete<DeleteV3EventsByIdResponse, DeleteV3EventsByIdError>({
    ...options,
    url: '/v3/events/{id}'
}); };

/**
 * Event statistics
 * Returns a summary of the registrations for the event.
 */
export const getV3EventsByEventIdStatistics = (options: Options<GetV3EventsByEventIdStatisticsData>) => { return (options?.client ?? client).get<GetV3EventsByEventIdStatisticsResponse, GetV3EventsByEventIdStatisticsError>({
    ...options,
    url: '/v3/events/{eventId}/statistics'
}); };

export const getV3InvoicesById = (options: Options<GetV3InvoicesByIdData>) => { return (options?.client ?? client).get<GetV3InvoicesByIdResponse, GetV3InvoicesByIdError>({
    ...options,
    url: '/v3/invoices/{id}'
}); };

export const postV3Invoices = (options?: Options<PostV3InvoicesData>) => { return (options?.client ?? client).post<PostV3InvoicesResponse, PostV3InvoicesError>({
    ...options,
    url: '/v3/invoices'
}); };

export const getV3NotificationsByIdRecipients = (options: Options<GetV3NotificationsByIdRecipientsData>) => { return (options?.client ?? client).get<GetV3NotificationsByIdRecipientsResponse, GetV3NotificationsByIdRecipientsError>({
    ...options,
    url: '/v3/notifications/{id}/recipients'
}); };

export const getV3NotificationsById = (options: Options<GetV3NotificationsByIdData>) => { return (options?.client ?? client).get<GetV3NotificationsByIdResponse, GetV3NotificationsByIdError>({
    ...options,
    url: '/v3/notifications/{id}'
}); };

export const getV3Notifications = (options?: Options<GetV3NotificationsData>) => { return (options?.client ?? client).get<GetV3NotificationsResponse, GetV3NotificationsError>({
    ...options,
    url: '/v3/notifications'
}); };

export const postV3NotificationsEmail = (options?: Options<PostV3NotificationsEmailData>) => { return (options?.client ?? client).post<PostV3NotificationsEmailResponse, PostV3NotificationsEmailError>({
    ...options,
    url: '/v3/notifications/email'
}); };

export const postV3NotificationsSms = (options?: Options<PostV3NotificationsSmsData>) => { return (options?.client ?? client).post<PostV3NotificationsSmsResponse, PostV3NotificationsSmsError>({
    ...options,
    url: '/v3/notifications/sms'
}); };

export const getV3Onlinecourses = (options?: Options<GetV3OnlinecoursesData>) => { return (options?.client ?? client).get<GetV3OnlinecoursesResponse, GetV3OnlinecoursesError>({
    ...options,
    url: '/v3/onlinecourses'
}); };

export const getV3OnlinecoursesById = (options: Options<GetV3OnlinecoursesByIdData>) => { return (options?.client ?? client).get<GetV3OnlinecoursesByIdResponse, GetV3OnlinecoursesByIdError>({
    ...options,
    url: '/v3/onlinecourses/{id}'
}); };

export const getV3OrdersById = (options: Options<GetV3OrdersByIdData>) => { return (options?.client ?? client).get<GetV3OrdersByIdResponse, GetV3OrdersByIdError>({
    ...options,
    url: '/v3/orders/{id}'
}); };

export const patchV3OrdersById = (options: Options<PatchV3OrdersByIdData>) => { return (options?.client ?? client).patch<PatchV3OrdersByIdResponse, PatchV3OrdersByIdError>({
    ...options,
    url: '/v3/orders/{id}'
}); };

export const putV3OrdersById = (options: Options<PutV3OrdersByIdData>) => { return (options?.client ?? client).put<PutV3OrdersByIdResponse, PutV3OrdersByIdError>({
    ...options,
    url: '/v3/orders/{id}'
}); };

export const deleteV3OrdersById = (options: Options<DeleteV3OrdersByIdData>) => { return (options?.client ?? client).delete<DeleteV3OrdersByIdResponse, DeleteV3OrdersByIdError>({
    ...options,
    url: '/v3/orders/{id}'
}); };

export const getV3Orders = (options?: Options<GetV3OrdersData>) => { return (options?.client ?? client).get<GetV3OrdersResponse, GetV3OrdersError>({
    ...options,
    url: '/v3/orders'
}); };

export const postV3Orders = (options?: Options<PostV3OrdersData>) => { return (options?.client ?? client).post<PostV3OrdersResponse, PostV3OrdersError>({
    ...options,
    url: '/v3/orders'
}); };

export const getV3OrganizationsByOrganizationIdMembersByUserIdRoles = (options: Options<GetV3OrganizationsByOrganizationIdMembersByUserIdRolesData>) => { return (options?.client ?? client).get<GetV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, GetV3OrganizationsByOrganizationIdMembersByUserIdRolesError>({
    ...options,
    url: '/v3/organizations/{organizationId}/members/{userId}/roles'
}); };

export const postV3OrganizationsByOrganizationIdMembersByUserIdRoles = (options: Options<PostV3OrganizationsByOrganizationIdMembersByUserIdRolesData>) => { return (options?.client ?? client).post<PostV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, PostV3OrganizationsByOrganizationIdMembersByUserIdRolesError>({
    ...options,
    url: '/v3/organizations/{organizationId}/members/{userId}/roles'
}); };

export const deleteV3OrganizationsByOrganizationIdMembersByUserIdRoles = (options: Options<DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesData>) => { return (options?.client ?? client).delete<DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesResponse, DeleteV3OrganizationsByOrganizationIdMembersByUserIdRolesError>({
    ...options,
    url: '/v3/organizations/{organizationId}/members/{userId}/roles'
}); };

export const putV3OrganizationsByOrganizationIdMembersByUserId = (options: Options<PutV3OrganizationsByOrganizationIdMembersByUserIdData>) => { return (options?.client ?? client).put<PutV3OrganizationsByOrganizationIdMembersByUserIdResponse, PutV3OrganizationsByOrganizationIdMembersByUserIdError>({
    ...options,
    url: '/v3/organizations/{organizationId}/members/{userId}'
}); };

export const deleteV3OrganizationsByOrganizationIdMembersByUserId = (options: Options<DeleteV3OrganizationsByOrganizationIdMembersByUserIdData>) => { return (options?.client ?? client).delete<DeleteV3OrganizationsByOrganizationIdMembersByUserIdResponse, DeleteV3OrganizationsByOrganizationIdMembersByUserIdError>({
    ...options,
    url: '/v3/organizations/{organizationId}/members/{userId}'
}); };

export const getV3Organizations = (options?: Options<GetV3OrganizationsData>) => { return (options?.client ?? client).get<GetV3OrganizationsResponse, GetV3OrganizationsError>({
    ...options,
    url: '/v3/organizations'
}); };

export const postV3Organizations = (options?: Options<PostV3OrganizationsData>) => { return (options?.client ?? client).post<PostV3OrganizationsResponse, PostV3OrganizationsError>({
    ...options,
    url: '/v3/organizations'
}); };

export const getV3OrganizationsByOrganizationId = (options: Options<GetV3OrganizationsByOrganizationIdData>) => { return (options?.client ?? client).get<GetV3OrganizationsByOrganizationIdResponse, GetV3OrganizationsByOrganizationIdError>({
    ...options,
    url: '/v3/organizations/{organizationId}'
}); };

export const putV3OrganizationsByOrganizationId = (options: Options<PutV3OrganizationsByOrganizationIdData>) => { return (options?.client ?? client).put<PutV3OrganizationsByOrganizationIdResponse, PutV3OrganizationsByOrganizationIdError>({
    ...options,
    url: '/v3/organizations/{organizationId}'
}); };

export const deleteV3OrganizationsByOrganizationId = (options: Options<DeleteV3OrganizationsByOrganizationIdData>) => { return (options?.client ?? client).delete<DeleteV3OrganizationsByOrganizationIdResponse, DeleteV3OrganizationsByOrganizationIdError>({
    ...options,
    url: '/v3/organizations/{organizationId}'
}); };

export const getV3OrganizationsByOrganizationIdSettings = (options: Options<GetV3OrganizationsByOrganizationIdSettingsData>) => { return (options?.client ?? client).get<GetV3OrganizationsByOrganizationIdSettingsResponse, GetV3OrganizationsByOrganizationIdSettingsError>({
    ...options,
    url: '/v3/organizations/{organizationId}/settings'
}); };

export const putV3OrganizationsByOrganizationIdSettings = (options: Options<PutV3OrganizationsByOrganizationIdSettingsData>) => { return (options?.client ?? client).put<PutV3OrganizationsByOrganizationIdSettingsResponse, PutV3OrganizationsByOrganizationIdSettingsError>({
    ...options,
    url: '/v3/organizations/{organizationId}/settings'
}); };

export const postV3OrganizationsByOrganizationIdSettings = (options: Options<PostV3OrganizationsByOrganizationIdSettingsData>) => { return (options?.client ?? client).post<PostV3OrganizationsByOrganizationIdSettingsResponse, PostV3OrganizationsByOrganizationIdSettingsError>({
    ...options,
    url: '/v3/organizations/{organizationId}/settings'
}); };

export const getV3ProductsByProductIdSummary = (options: Options<GetV3ProductsByProductIdSummaryData>) => { return (options?.client ?? client).get<GetV3ProductsByProductIdSummaryResponse, GetV3ProductsByProductIdSummaryError>({
    ...options,
    url: '/v3/products/{productId}/summary'
}); };

export const postV3RegistrationsByIdCertificateSend = (options: Options<PostV3RegistrationsByIdCertificateSendData>) => { return (options?.client ?? client).post<PostV3RegistrationsByIdCertificateSendResponse, PostV3RegistrationsByIdCertificateSendError>({
    ...options,
    url: '/v3/registrations/{id}/certificate/send'
}); };

export const getV3RegistrationsByIdOrders = (options: Options<GetV3RegistrationsByIdOrdersData>) => { return (options?.client ?? client).get<GetV3RegistrationsByIdOrdersResponse, GetV3RegistrationsByIdOrdersError>({
    ...options,
    url: '/v3/registrations/{id}/orders'
}); };

export const postV3RegistrationsByIdOrders = (options: Options<PostV3RegistrationsByIdOrdersData>) => { return (options?.client ?? client).post<PostV3RegistrationsByIdOrdersResponse, PostV3RegistrationsByIdOrdersError>({
    ...options,
    url: '/v3/registrations/{id}/orders'
}); };

export const postV3RegistrationsByIdProducts = (options: Options<PostV3RegistrationsByIdProductsData>) => { return (options?.client ?? client).post<PostV3RegistrationsByIdProductsResponse, PostV3RegistrationsByIdProductsError>({
    ...options,
    url: '/v3/registrations/{id}/products'
}); };

/**
 * Get registrations with optional Excel export
 * Retrieves registrations with optional export to Excel based on the Accept header.
 */
export const getV3Registrations = (options?: Options<GetV3RegistrationsData>) => { return (options?.client ?? client).get<GetV3RegistrationsResponse, GetV3RegistrationsError>({
    ...options,
    url: '/v3/registrations'
}); };

export const postV3Registrations = (options?: Options<PostV3RegistrationsData>) => { return (options?.client ?? client).post<PostV3RegistrationsResponse, PostV3RegistrationsError>({
    ...options,
    url: '/v3/registrations'
}); };

export const getV3RegistrationsById = (options: Options<GetV3RegistrationsByIdData>) => { return (options?.client ?? client).get<GetV3RegistrationsByIdResponse, GetV3RegistrationsByIdError>({
    ...options,
    url: '/v3/registrations/{id}'
}); };

export const putV3RegistrationsById = (options: Options<PutV3RegistrationsByIdData>) => { return (options?.client ?? client).put<PutV3RegistrationsByIdResponse, PutV3RegistrationsByIdError>({
    ...options,
    url: '/v3/registrations/{id}'
}); };

export const patchV3RegistrationsById = (options: Options<PatchV3RegistrationsByIdData>) => { return (options?.client ?? client).patch<PatchV3RegistrationsByIdResponse, PatchV3RegistrationsByIdError>({
    ...options,
    url: '/v3/registrations/{id}'
}); };

export const deleteV3RegistrationsById = (options: Options<DeleteV3RegistrationsByIdData>) => { return (options?.client ?? client).delete<DeleteV3RegistrationsByIdResponse, DeleteV3RegistrationsByIdError>({
    ...options,
    url: '/v3/registrations/{id}'
}); };

/**
 * Alias for POST /v3/registrations
 */
export const postV3RegistrationsMeByEventId = (options: Options<PostV3RegistrationsMeByEventIdData>) => { return (options?.client ?? client).post<PostV3RegistrationsMeByEventIdResponse, PostV3RegistrationsMeByEventIdError>({
    ...options,
    url: '/v3/registrations/me/{eventId}'
}); };

/**
 * Gets information about the current user. Creates a new user if no user with the email exists.
 */
export const getV3Userprofile = (options?: Options<GetV3UserprofileData>) => { return (options?.client ?? client).get<GetV3UserprofileResponse, GetV3UserprofileError>({
    ...options,
    url: '/v3/userprofile'
}); };

export const putV3Userprofile = (options?: Options<PutV3UserprofileData>) => { return (options?.client ?? client).put<PutV3UserprofileResponse, PutV3UserprofileError>({
    ...options,
    url: '/v3/userprofile'
}); };

/**
 * @deprecated
 * Gets information about the current user. Creates a new user if no user with the email exists.
 */
export const getV3UsersMe = (options?: Options<GetV3UsersMeData>) => { return (options?.client ?? client).get<GetV3UsersMeResponse, GetV3UsersMeError>({
    ...options,
    url: '/v3/users/me'
}); };

export const getV3UsersById = (options: Options<GetV3UsersByIdData>) => { return (options?.client ?? client).get<GetV3UsersByIdResponse, GetV3UsersByIdError>({
    ...options,
    url: '/v3/users/{id}'
}); };

export const putV3UsersById = (options: Options<PutV3UsersByIdData>) => { return (options?.client ?? client).put<PutV3UsersByIdResponse, PutV3UsersByIdError>({
    ...options,
    url: '/v3/users/{id}'
}); };

export const getV3Users = (options?: Options<GetV3UsersData>) => { return (options?.client ?? client).get<GetV3UsersResponse, GetV3UsersError>({
    ...options,
    url: '/v3/users'
}); };

export const postV3Users = (options?: Options<PostV3UsersData>) => { return (options?.client ?? client).post<PostV3UsersResponse, PostV3UsersError>({
    ...options,
    url: '/v3/users'
}); };