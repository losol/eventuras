/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { eventProductVariantsDeleteV3EventsEventIdProductsProductIdVariantsId } from "../funcs/eventProductVariantsDeleteV3EventsEventIdProductsProductIdVariantsId.js";
import {
  eventProductVariantsGetV3EventsEventIdProductsProductIdVariants,
  GetV3EventsEventIdProductsProductIdVariantsAcceptEnum,
} from "../funcs/eventProductVariantsGetV3EventsEventIdProductsProductIdVariants.js";
import { eventProductVariantsPostV3EventsEventIdProductsProductIdVariants } from "../funcs/eventProductVariantsPostV3EventsEventIdProductsProductIdVariants.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetV3EventsEventIdProductsProductIdVariantsAcceptEnum } from "../funcs/eventProductVariantsGetV3EventsEventIdProductsProductIdVariants.js";

export class EventProductVariants extends ClientSDK {
  async getV3EventsEventIdProductsProductIdVariants(
    request: operations.GetV3EventsEventIdProductsProductIdVariantsRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?:
        GetV3EventsEventIdProductsProductIdVariantsAcceptEnum;
    },
  ): Promise<operations.GetV3EventsEventIdProductsProductIdVariantsResponse> {
    return unwrapAsync(
      eventProductVariantsGetV3EventsEventIdProductsProductIdVariants(
        this,
        request,
        options,
      ),
    );
  }

  async postV3EventsEventIdProductsProductIdVariants(
    request: operations.PostV3EventsEventIdProductsProductIdVariantsRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(
      eventProductVariantsPostV3EventsEventIdProductsProductIdVariants(
        this,
        request,
        options,
      ),
    );
  }

  async deleteV3EventsEventIdProductsProductIdVariantsId(
    request: operations.DeleteV3EventsEventIdProductsProductIdVariantsIdRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(
      eventProductVariantsDeleteV3EventsEventIdProductsProductIdVariantsId(
        this,
        request,
        options,
      ),
    );
  }
}
