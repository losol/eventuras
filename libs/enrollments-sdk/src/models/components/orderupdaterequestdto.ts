/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  OrderLineModel,
  OrderLineModel$inboundSchema,
  OrderLineModel$Outbound,
  OrderLineModel$outboundSchema,
} from "./orderlinemodel.js";

export type OrderUpdateRequestDto = {
  lines: Array<OrderLineModel>;
};

/** @internal */
export const OrderUpdateRequestDto$inboundSchema: z.ZodType<
  OrderUpdateRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  lines: z.array(OrderLineModel$inboundSchema),
});

/** @internal */
export type OrderUpdateRequestDto$Outbound = {
  lines: Array<OrderLineModel$Outbound>;
};

/** @internal */
export const OrderUpdateRequestDto$outboundSchema: z.ZodType<
  OrderUpdateRequestDto$Outbound,
  z.ZodTypeDef,
  OrderUpdateRequestDto
> = z.object({
  lines: z.array(OrderLineModel$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrderUpdateRequestDto$ {
  /** @deprecated use `OrderUpdateRequestDto$inboundSchema` instead. */
  export const inboundSchema = OrderUpdateRequestDto$inboundSchema;
  /** @deprecated use `OrderUpdateRequestDto$outboundSchema` instead. */
  export const outboundSchema = OrderUpdateRequestDto$outboundSchema;
  /** @deprecated use `OrderUpdateRequestDto$Outbound` instead. */
  export type Outbound = OrderUpdateRequestDto$Outbound;
}

export function orderUpdateRequestDtoToJSON(
  orderUpdateRequestDto: OrderUpdateRequestDto,
): string {
  return JSON.stringify(
    OrderUpdateRequestDto$outboundSchema.parse(orderUpdateRequestDto),
  );
}

export function orderUpdateRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<OrderUpdateRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OrderUpdateRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OrderUpdateRequestDto' from JSON`,
  );
}
