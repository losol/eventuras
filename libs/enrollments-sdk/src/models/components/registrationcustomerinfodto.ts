/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RegistrationCustomerInfoDto = {
  vatNumber?: string | null | undefined;
  name?: string | null | undefined;
  email?: string | null | undefined;
  zip?: string | null | undefined;
  city?: string | null | undefined;
  country?: string | null | undefined;
  invoiceReference?: string | null | undefined;
};

/** @internal */
export const RegistrationCustomerInfoDto$inboundSchema: z.ZodType<
  RegistrationCustomerInfoDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  vatNumber: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  email: z.nullable(z.string()).optional(),
  zip: z.nullable(z.string()).optional(),
  city: z.nullable(z.string()).optional(),
  country: z.nullable(z.string()).optional(),
  invoiceReference: z.nullable(z.string()).optional(),
});

/** @internal */
export type RegistrationCustomerInfoDto$Outbound = {
  vatNumber?: string | null | undefined;
  name?: string | null | undefined;
  email?: string | null | undefined;
  zip?: string | null | undefined;
  city?: string | null | undefined;
  country?: string | null | undefined;
  invoiceReference?: string | null | undefined;
};

/** @internal */
export const RegistrationCustomerInfoDto$outboundSchema: z.ZodType<
  RegistrationCustomerInfoDto$Outbound,
  z.ZodTypeDef,
  RegistrationCustomerInfoDto
> = z.object({
  vatNumber: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  email: z.nullable(z.string()).optional(),
  zip: z.nullable(z.string()).optional(),
  city: z.nullable(z.string()).optional(),
  country: z.nullable(z.string()).optional(),
  invoiceReference: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RegistrationCustomerInfoDto$ {
  /** @deprecated use `RegistrationCustomerInfoDto$inboundSchema` instead. */
  export const inboundSchema = RegistrationCustomerInfoDto$inboundSchema;
  /** @deprecated use `RegistrationCustomerInfoDto$outboundSchema` instead. */
  export const outboundSchema = RegistrationCustomerInfoDto$outboundSchema;
  /** @deprecated use `RegistrationCustomerInfoDto$Outbound` instead. */
  export type Outbound = RegistrationCustomerInfoDto$Outbound;
}

export function registrationCustomerInfoDtoToJSON(
  registrationCustomerInfoDto: RegistrationCustomerInfoDto,
): string {
  return JSON.stringify(
    RegistrationCustomerInfoDto$outboundSchema.parse(
      registrationCustomerInfoDto,
    ),
  );
}

export function registrationCustomerInfoDtoFromJSON(
  jsonString: string,
): SafeParseResult<RegistrationCustomerInfoDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RegistrationCustomerInfoDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RegistrationCustomerInfoDto' from JSON`,
  );
}
