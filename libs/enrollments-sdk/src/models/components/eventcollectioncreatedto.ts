/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EventCollectionCreateDto = {
  organizationId: number;
  name: string;
  slug?: string | null | undefined;
  description?: string | null | undefined;
  featured?: boolean | undefined;
  featuredImageUrl?: string | null | undefined;
  featuredImageCaption?: string | null | undefined;
};

/** @internal */
export const EventCollectionCreateDto$inboundSchema: z.ZodType<
  EventCollectionCreateDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  organizationId: z.number().int(),
  name: z.string(),
  slug: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  featured: z.boolean().optional(),
  featuredImageUrl: z.nullable(z.string()).optional(),
  featuredImageCaption: z.nullable(z.string()).optional(),
});

/** @internal */
export type EventCollectionCreateDto$Outbound = {
  organizationId: number;
  name: string;
  slug?: string | null | undefined;
  description?: string | null | undefined;
  featured?: boolean | undefined;
  featuredImageUrl?: string | null | undefined;
  featuredImageCaption?: string | null | undefined;
};

/** @internal */
export const EventCollectionCreateDto$outboundSchema: z.ZodType<
  EventCollectionCreateDto$Outbound,
  z.ZodTypeDef,
  EventCollectionCreateDto
> = z.object({
  organizationId: z.number().int(),
  name: z.string(),
  slug: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  featured: z.boolean().optional(),
  featuredImageUrl: z.nullable(z.string()).optional(),
  featuredImageCaption: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventCollectionCreateDto$ {
  /** @deprecated use `EventCollectionCreateDto$inboundSchema` instead. */
  export const inboundSchema = EventCollectionCreateDto$inboundSchema;
  /** @deprecated use `EventCollectionCreateDto$outboundSchema` instead. */
  export const outboundSchema = EventCollectionCreateDto$outboundSchema;
  /** @deprecated use `EventCollectionCreateDto$Outbound` instead. */
  export type Outbound = EventCollectionCreateDto$Outbound;
}

export function eventCollectionCreateDtoToJSON(
  eventCollectionCreateDto: EventCollectionCreateDto,
): string {
  return JSON.stringify(
    EventCollectionCreateDto$outboundSchema.parse(eventCollectionCreateDto),
  );
}

export function eventCollectionCreateDtoFromJSON(
  jsonString: string,
): SafeParseResult<EventCollectionCreateDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EventCollectionCreateDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EventCollectionCreateDto' from JSON`,
  );
}
