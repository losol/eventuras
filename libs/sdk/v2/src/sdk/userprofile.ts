/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  GetV3UserprofileAcceptEnum,
  userProfileGetV3Userprofile,
} from "../funcs/userProfileGetV3Userprofile.js";
import {
  PutV3UserprofileAcceptEnum,
  userProfilePutV3Userprofile,
} from "../funcs/userProfilePutV3Userprofile.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { GetV3UserprofileAcceptEnum } from "../funcs/userProfileGetV3Userprofile.js";

export { PutV3UserprofileAcceptEnum } from "../funcs/userProfilePutV3Userprofile.js";

export class UserProfile extends ClientSDK {
  /**
   * Gets information about the current user. Creates a new user if no user with the email exists.
   */
  async getV3Userprofile(
    request: operations.GetV3UserprofileRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: GetV3UserprofileAcceptEnum;
    },
  ): Promise<operations.GetV3UserprofileResponse> {
    return unwrapAsync(userProfileGetV3Userprofile(
      this,
      request,
      options,
    ));
  }

  async putV3Userprofile(
    request: operations.PutV3UserprofileRequest,
    options?: RequestOptions & {
      acceptHeaderOverride?: PutV3UserprofileAcceptEnum;
    },
  ): Promise<operations.PutV3UserprofileResponse> {
    return unwrapAsync(userProfilePutV3Userprofile(
      this,
      request,
      options,
    ));
  }
}
