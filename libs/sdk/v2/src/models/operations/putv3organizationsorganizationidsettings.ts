/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PutV3OrganizationsOrganizationIdSettingsRequest = {
  organizationId: number;
  /**
   * Optional organization Id. Will be required in API version 4.
   */
  eventurasOrgId?: number | undefined;
  organizationSettingValueDto?:
    | components.OrganizationSettingValueDto
    | undefined;
};

/** @internal */
export const PutV3OrganizationsOrganizationIdSettingsRequest$inboundSchema:
  z.ZodType<
    PutV3OrganizationsOrganizationIdSettingsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organizationId: z.number().int(),
    "Eventuras-Org-Id": z.number().int().optional(),
    OrganizationSettingValueDto: components
      .OrganizationSettingValueDto$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "Eventuras-Org-Id": "eventurasOrgId",
      "OrganizationSettingValueDto": "organizationSettingValueDto",
    });
  });

/** @internal */
export type PutV3OrganizationsOrganizationIdSettingsRequest$Outbound = {
  organizationId: number;
  "Eventuras-Org-Id"?: number | undefined;
  OrganizationSettingValueDto?:
    | components.OrganizationSettingValueDto$Outbound
    | undefined;
};

/** @internal */
export const PutV3OrganizationsOrganizationIdSettingsRequest$outboundSchema:
  z.ZodType<
    PutV3OrganizationsOrganizationIdSettingsRequest$Outbound,
    z.ZodTypeDef,
    PutV3OrganizationsOrganizationIdSettingsRequest
  > = z.object({
    organizationId: z.number().int(),
    eventurasOrgId: z.number().int().optional(),
    organizationSettingValueDto: components
      .OrganizationSettingValueDto$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      eventurasOrgId: "Eventuras-Org-Id",
      organizationSettingValueDto: "OrganizationSettingValueDto",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PutV3OrganizationsOrganizationIdSettingsRequest$ {
  /** @deprecated use `PutV3OrganizationsOrganizationIdSettingsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PutV3OrganizationsOrganizationIdSettingsRequest$inboundSchema;
  /** @deprecated use `PutV3OrganizationsOrganizationIdSettingsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PutV3OrganizationsOrganizationIdSettingsRequest$outboundSchema;
  /** @deprecated use `PutV3OrganizationsOrganizationIdSettingsRequest$Outbound` instead. */
  export type Outbound =
    PutV3OrganizationsOrganizationIdSettingsRequest$Outbound;
}

export function putV3OrganizationsOrganizationIdSettingsRequestToJSON(
  putV3OrganizationsOrganizationIdSettingsRequest:
    PutV3OrganizationsOrganizationIdSettingsRequest,
): string {
  return JSON.stringify(
    PutV3OrganizationsOrganizationIdSettingsRequest$outboundSchema.parse(
      putV3OrganizationsOrganizationIdSettingsRequest,
    ),
  );
}

export function putV3OrganizationsOrganizationIdSettingsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  PutV3OrganizationsOrganizationIdSettingsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PutV3OrganizationsOrganizationIdSettingsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PutV3OrganizationsOrganizationIdSettingsRequest' from JSON`,
  );
}
