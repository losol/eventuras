/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV3RegistrationsIdOrdersRequest = {
  id: number;
  /**
   * Optional organization Id. Will be required in API version 4.
   */
  eventurasOrgId?: number | undefined;
  newRegistrationOrderDto?: components.NewRegistrationOrderDto | undefined;
};

/** @internal */
export const PostV3RegistrationsIdOrdersRequest$inboundSchema: z.ZodType<
  PostV3RegistrationsIdOrdersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  "Eventuras-Org-Id": z.number().int().optional(),
  NewRegistrationOrderDto: components.NewRegistrationOrderDto$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "Eventuras-Org-Id": "eventurasOrgId",
    "NewRegistrationOrderDto": "newRegistrationOrderDto",
  });
});

/** @internal */
export type PostV3RegistrationsIdOrdersRequest$Outbound = {
  id: number;
  "Eventuras-Org-Id"?: number | undefined;
  NewRegistrationOrderDto?:
    | components.NewRegistrationOrderDto$Outbound
    | undefined;
};

/** @internal */
export const PostV3RegistrationsIdOrdersRequest$outboundSchema: z.ZodType<
  PostV3RegistrationsIdOrdersRequest$Outbound,
  z.ZodTypeDef,
  PostV3RegistrationsIdOrdersRequest
> = z.object({
  id: z.number().int(),
  eventurasOrgId: z.number().int().optional(),
  newRegistrationOrderDto: components.NewRegistrationOrderDto$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    eventurasOrgId: "Eventuras-Org-Id",
    newRegistrationOrderDto: "NewRegistrationOrderDto",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV3RegistrationsIdOrdersRequest$ {
  /** @deprecated use `PostV3RegistrationsIdOrdersRequest$inboundSchema` instead. */
  export const inboundSchema = PostV3RegistrationsIdOrdersRequest$inboundSchema;
  /** @deprecated use `PostV3RegistrationsIdOrdersRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostV3RegistrationsIdOrdersRequest$outboundSchema;
  /** @deprecated use `PostV3RegistrationsIdOrdersRequest$Outbound` instead. */
  export type Outbound = PostV3RegistrationsIdOrdersRequest$Outbound;
}

export function postV3RegistrationsIdOrdersRequestToJSON(
  postV3RegistrationsIdOrdersRequest: PostV3RegistrationsIdOrdersRequest,
): string {
  return JSON.stringify(
    PostV3RegistrationsIdOrdersRequest$outboundSchema.parse(
      postV3RegistrationsIdOrdersRequest,
    ),
  );
}

export function postV3RegistrationsIdOrdersRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostV3RegistrationsIdOrdersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV3RegistrationsIdOrdersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV3RegistrationsIdOrdersRequest' from JSON`,
  );
}
