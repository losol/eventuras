/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV3RegistrationsIdProductsRequest = {
  id: number;
  /**
   * Optional organization Id. Will be required in API version 4.
   */
  eventurasOrgId?: number | undefined;
  orderUpdateRequestDto?: components.OrderUpdateRequestDto | undefined;
};

/** @internal */
export const PostV3RegistrationsIdProductsRequest$inboundSchema: z.ZodType<
  PostV3RegistrationsIdProductsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  "Eventuras-Org-Id": z.number().int().optional(),
  OrderUpdateRequestDto: components.OrderUpdateRequestDto$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "Eventuras-Org-Id": "eventurasOrgId",
    "OrderUpdateRequestDto": "orderUpdateRequestDto",
  });
});

/** @internal */
export type PostV3RegistrationsIdProductsRequest$Outbound = {
  id: number;
  "Eventuras-Org-Id"?: number | undefined;
  OrderUpdateRequestDto?: components.OrderUpdateRequestDto$Outbound | undefined;
};

/** @internal */
export const PostV3RegistrationsIdProductsRequest$outboundSchema: z.ZodType<
  PostV3RegistrationsIdProductsRequest$Outbound,
  z.ZodTypeDef,
  PostV3RegistrationsIdProductsRequest
> = z.object({
  id: z.number().int(),
  eventurasOrgId: z.number().int().optional(),
  orderUpdateRequestDto: components.OrderUpdateRequestDto$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    eventurasOrgId: "Eventuras-Org-Id",
    orderUpdateRequestDto: "OrderUpdateRequestDto",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV3RegistrationsIdProductsRequest$ {
  /** @deprecated use `PostV3RegistrationsIdProductsRequest$inboundSchema` instead. */
  export const inboundSchema =
    PostV3RegistrationsIdProductsRequest$inboundSchema;
  /** @deprecated use `PostV3RegistrationsIdProductsRequest$outboundSchema` instead. */
  export const outboundSchema =
    PostV3RegistrationsIdProductsRequest$outboundSchema;
  /** @deprecated use `PostV3RegistrationsIdProductsRequest$Outbound` instead. */
  export type Outbound = PostV3RegistrationsIdProductsRequest$Outbound;
}

export function postV3RegistrationsIdProductsRequestToJSON(
  postV3RegistrationsIdProductsRequest: PostV3RegistrationsIdProductsRequest,
): string {
  return JSON.stringify(
    PostV3RegistrationsIdProductsRequest$outboundSchema.parse(
      postV3RegistrationsIdProductsRequest,
    ),
  );
}

export function postV3RegistrationsIdProductsRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostV3RegistrationsIdProductsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV3RegistrationsIdProductsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV3RegistrationsIdProductsRequest' from JSON`,
  );
}
