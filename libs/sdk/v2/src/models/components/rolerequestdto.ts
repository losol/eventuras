/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RoleRequestDto = {
  role: string;
};

/** @internal */
export const RoleRequestDto$inboundSchema: z.ZodType<
  RoleRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: z.string(),
});

/** @internal */
export type RoleRequestDto$Outbound = {
  role: string;
};

/** @internal */
export const RoleRequestDto$outboundSchema: z.ZodType<
  RoleRequestDto$Outbound,
  z.ZodTypeDef,
  RoleRequestDto
> = z.object({
  role: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RoleRequestDto$ {
  /** @deprecated use `RoleRequestDto$inboundSchema` instead. */
  export const inboundSchema = RoleRequestDto$inboundSchema;
  /** @deprecated use `RoleRequestDto$outboundSchema` instead. */
  export const outboundSchema = RoleRequestDto$outboundSchema;
  /** @deprecated use `RoleRequestDto$Outbound` instead. */
  export type Outbound = RoleRequestDto$Outbound;
}

export function roleRequestDtoToJSON(roleRequestDto: RoleRequestDto): string {
  return JSON.stringify(RoleRequestDto$outboundSchema.parse(roleRequestDto));
}

export function roleRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<RoleRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RoleRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RoleRequestDto' from JSON`,
  );
}
