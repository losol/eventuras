openapi: 3.0.0

info:
  title: Eventuras API
  description: Event Management API.
  version: 3.0.1
  contact:
    name: Contact Name
    email: contact@email.com
    url: http://losol.github.io/eventuras/openapi/v3/eventuras-api.v3.yaml
  license:
    name: GPL

externalDocs:
  description: Generated API HTML
  url: http://losol.github.io/eventuras/openapi/v3/

servers:
  - url: https://full.path.to/v3/

paths:

  # Registrations
  /registrations:
    $ref: './paths/registrations.yaml'
  /registrations/me/{eventId}:
    $ref: './paths/registrations/me.yaml'
  /registrations/{id}:
    $ref: './paths/registrations/id.yaml'
  /registrations/{id}/orders:
    $ref: './paths/registrations/orders.yaml'

  # Notifications
  /notifications/email:
    $ref: './paths/notifications/email.yaml'

  # Users
  /users:
    $ref: './paths/users.yaml'
  /users/me:
    $ref: './paths/users/me.yaml'
  /users/{id}:
    $ref: './paths/users/id.yaml'

  # Events
  /events:
    $ref: './paths/events.yaml'
  /events/{id}:
    $ref: './paths/events/id.yaml'
  /events/{id}/products:
    $ref: './paths/events/products.yaml'
  /events/{id}/products/{productId}:
    $ref: './paths/events/products/id.yaml'
  /events/{id}/products/{productId}/variants:
    $ref: './paths/events/products/variants.yaml'
  /events/{id}/products/{productId}/variants/{variantId}:
    $ref: './paths/events/products/variants/id.yaml'

  # Orders
  /orders:
    $ref: './paths/orders.yaml'
  /orders/{id}:
    $ref: './paths/orders/id.yaml'

  # Organizations
  /organizations:
    $ref: './paths/organizations.yaml'
  /organizations/{id}:
    $ref: './paths/organizations/id.yaml'

  # Organization members
  /organizations/{id}/members:
    $ref: './paths/organizations/members.yaml'
  /organizations/{id}/members/{memberId}/roles:
    $ref: './paths/organizations/members/roles.yaml'

  # Organization settings
  /organizations/{id}/settings:
    $ref: './paths/organizations/settings.yaml'

components:

  schemas:
    Error:
      $ref: './schemas/Error.yaml'

  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    pageNumber:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
      description: Page number.
    pageSize:
      name: count
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 100
      description: Page size.

  responses:

    NotFound:
      description: The requested resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InvalidRequestError:
      description: Missing or invalid request parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedError:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ForbiddenError:
      description: Access forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Data conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

security:
  - bearer: [ ]
