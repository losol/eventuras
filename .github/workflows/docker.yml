name: Docker CI

on:
  push:
    branches:
      - main
      - "feature/*"
  pull_request:
    branches:
      - main
  release:
    types: [published]
    
env:
  ORGANIZATION_NAME: losolio
  IMAGE_NAME: eventuras

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  latest:
    name: Publish latest from main branch
    if: github.ref == 'refs/heads/main'
    needs: test
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          echo "RUN_NUMBER=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date +'%H%M%S')" >> $GITHUB_ENV

      - name: Docker meta (main)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-${{ env.BUILD_DATE }}.${{ env.RUN_NUMBER }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Return image tag
        id: output-step
        run: echo "::set-output name=image-tag::${{ steps.meta.outputs.tags }}"

  feature:
    name: Build image and push feature image to Docker Hub.
    if: contains(github.ref, 'feature')
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          echo "RUN_NUMBER=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date +'%H%M%S')" >> $GITHUB_ENV

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch

      - name: Docker meta (feature image)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-feature-${{ steps.extract_branch.outputs.branch }}-${{ env.BUILD_DATE }}.${{ env.RUN_NUMBER }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  release:
    name: Publish release to Docker
    if: github.event_name == 'release'
    needs: test
    outputs:
      image-tag: ${{ steps.output-step.outputs.image-tag }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
            ${{ env.ORGANIZATION_NAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Return image tag
        id: output-step
        run: echo "::set-output name=image-tag::${{ env.RELEASE_TAG }}"
